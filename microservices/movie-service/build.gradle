buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


plugins {
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'se.magnus.microservices.core.movie'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

ext {
	mapstructVersion = "1.3.1.Final"
	springCloudVersion = "Hoxton.SR6"
}

repositories {
	mavenCentral()
	maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	//testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive"
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo"

	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')

	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.retry:spring-retry')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
